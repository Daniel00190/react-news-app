{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-news-app\\\\news-api-react\\\\src\\\\components\\\\topicsPage.js\";\nimport React, { useState } from \"react\";\nimport BigArticle from \"./BigArticle\";\n\nfunction TopicsPage(props) {\n  const [articles, setArticles] = useState();\n  const [state, setState] = useState(\"/top\");\n  const topicsData = props.topicsData;\n  const url = topicsData.url;\n  const valueToSend = topicsData.topic;\n  console.log(topicsData);\n  let options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(valueToSend)\n  };\n\n  if (url) {\n    fetch(`${url}`, options).then(response => response.json()).then(data => {\n      setArticles(data.articles);\n    });\n  } else {\n    console.log(\"error\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-section-news\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }, topicsData ? topicsData.filter(art => !!art.description && !!art.urlToImage && !!art.author).slice(0, 15).map(article => /*#__PURE__*/React.createElement(BigArticle, {\n    key: topicsData.article.url,\n    headline: topicsData.article.title,\n    author: topicsData.article.author,\n    time: topicsData.article.publishedAt,\n    description: topicsData.article.description,\n    imgURL: topicsData.article.urlToImage,\n    url: topicsData.article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }\n  }, \"nothing right now\")));\n}\n\nexport default TopicsPage;","map":{"version":3,"sources":["C:/Users/User/Desktop/react-news-app/news-api-react/src/components/topicsPage.js"],"names":["React","useState","BigArticle","TopicsPage","props","articles","setArticles","state","setState","topicsData","url","valueToSend","topic","console","log","options","method","headers","body","JSON","stringify","fetch","then","response","json","data","filter","art","description","urlToImage","author","slice","map","article","title","publishedAt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,MAAD,CAAlC;AACA,QAAMQ,UAAU,GAAGL,KAAK,CAACK,UAAzB;AACA,QAAMC,GAAG,GAAGD,UAAU,CAACC,GAAvB;AAEA,QAAMC,WAAW,GAAGF,UAAU,CAACG,KAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AAEA,MAAIM,OAAO,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,OAAO,EAAE;AACN,sBAAgB;AADV,KAFE;AAKXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,WAAf;AALK,GAAd;;AAOA,MAAID,GAAJ,EAAS;AACNW,IAAAA,KAAK,CAAE,GAAEX,GAAI,EAAR,EAAWK,OAAX,CAAL,CACIO,IADJ,CACUC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADvB,EAEIF,IAFJ,CAEUG,IAAD,IAAU;AACbnB,MAAAA,WAAW,CAACmB,IAAI,CAACpB,QAAN,CAAX;AACF,KAJJ;AAKF,GAND,MAMO;AACJQ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACF;;AAED,sBACG;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIL,UAAU,GACRA,UAAU,CACNiB,MADJ,CAEOC,GAAD,IACG,CAAC,CAACA,GAAG,CAACC,WAAN,IAAqB,CAAC,CAACD,GAAG,CAACE,UAA3B,IAAyC,CAAC,CAACF,GAAG,CAACG,MAHxD,EAKIC,KALJ,CAKU,CALV,EAKa,EALb,EAMIC,GANJ,CAMSC,OAAD,iBACF,oBAAC,UAAD;AACG,IAAA,GAAG,EAAExB,UAAU,CAACwB,OAAX,CAAmBvB,GAD3B;AAEG,IAAA,QAAQ,EAAED,UAAU,CAACwB,OAAX,CAAmBC,KAFhC;AAGG,IAAA,MAAM,EAAEzB,UAAU,CAACwB,OAAX,CAAmBH,MAH9B;AAIG,IAAA,IAAI,EAAErB,UAAU,CAACwB,OAAX,CAAmBE,WAJ5B;AAKG,IAAA,WAAW,EAAE1B,UAAU,CAACwB,OAAX,CAAmBL,WALnC;AAMG,IAAA,MAAM,EAAEnB,UAAU,CAACwB,OAAX,CAAmBJ,UAN9B;AAOG,IAAA,GAAG,EAAEpB,UAAU,CAACwB,OAAX,CAAmBvB,GAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPN,CADQ,gBAmBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBApBN,CADH,CADH;AA2BF;;AAED,eAAeP,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport BigArticle from \"./BigArticle\";\r\n\r\nfunction TopicsPage(props) {\r\n   const [articles, setArticles] = useState();\r\n   const [state, setState] = useState(\"/top\");\r\n   const topicsData = props.topicsData;\r\n   const url = topicsData.url;\r\n\r\n   const valueToSend = topicsData.topic;\r\n   console.log(topicsData);\r\n\r\n   let options = {\r\n      method: \"POST\",\r\n      headers: {\r\n         \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(valueToSend),\r\n   };\r\n   if (url) {\r\n      fetch(`${url}`, options)\r\n         .then((response) => response.json())\r\n         .then((data) => {\r\n            setArticles(data.articles);\r\n         });\r\n   } else {\r\n      console.log(\"error\");\r\n   }\r\n\r\n   return (\r\n      <div className=\"navbar-container\">\r\n         <div className=\"left-section-news\">\r\n            {topicsData ? (\r\n               topicsData\r\n                  .filter(\r\n                     (art) =>\r\n                        !!art.description && !!art.urlToImage && !!art.author\r\n                  )\r\n                  .slice(0, 15)\r\n                  .map((article) => (\r\n                     <BigArticle\r\n                        key={topicsData.article.url}\r\n                        headline={topicsData.article.title}\r\n                        author={topicsData.article.author}\r\n                        time={topicsData.article.publishedAt}\r\n                        description={topicsData.article.description}\r\n                        imgURL={topicsData.article.urlToImage}\r\n                        url={topicsData.article.url}\r\n                     />\r\n                  ))\r\n            ) : (\r\n               <div>nothing right now</div>\r\n            )}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TopicsPage;\r\n"]},"metadata":{},"sourceType":"module"}