{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-news-app\\\\news-api-react\\\\src\\\\components\\\\topicsPage.js\";\nimport React, { useState } from \"react\";\nimport BigArticle from \"./BigArticle\";\n\nfunction TopicsPage(props) {\n  const [articles, setArticles] = useState();\n  const valueToSend = topicsData.topic;\n  console.log(topicsData);\n  let options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(valueToSend)\n  };\n  fetch(\"/sources\", options).then(response => response.json()).then(data => {\n    setArticles(data.articles);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-section-news\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, articles ? articles.filter(art => !!art.description && !!art.urlToImage && !!art.author).slice(0, 15).map(article => /*#__PURE__*/React.createElement(BigArticle, {\n    key: article.url,\n    headline: article.title,\n    author: article.author,\n    time: article.publishedAt,\n    description: article.description,\n    imgURL: article.urlToImage,\n    url: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }\n  }, \"nothing right now\")));\n}\n\nexport default TopicsPage;","map":{"version":3,"sources":["C:/Users/User/Desktop/react-news-app/news-api-react/src/components/topicsPage.js"],"names":["React","useState","BigArticle","TopicsPage","props","articles","setArticles","valueToSend","topicsData","topic","console","log","options","method","headers","body","JSON","stringify","fetch","then","response","json","data","filter","art","description","urlToImage","author","slice","map","article","url","title","publishedAt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,EAAxC;AACA,QAAMM,WAAW,GAAGC,UAAU,CAACC,KAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEA,MAAII,OAAO,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,OAAO,EAAE;AACN,sBAAgB;AADV,KAFE;AAKXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,WAAf;AALK,GAAd;AAQAW,EAAAA,KAAK,CAAC,UAAD,EAAaN,OAAb,CAAL,CACIO,IADJ,CACUC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADvB,EAEIF,IAFJ,CAEUG,IAAD,IAAU;AACbhB,IAAAA,WAAW,CAACgB,IAAI,CAACjB,QAAN,CAAX;AACF,GAJJ;AAMA,sBACG;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,QAAQ,GACNA,QAAQ,CACJkB,MADJ,CAEOC,GAAD,IACG,CAAC,CAACA,GAAG,CAACC,WAAN,IAAqB,CAAC,CAACD,GAAG,CAACE,UAA3B,IAAyC,CAAC,CAACF,GAAG,CAACG,MAHxD,EAKIC,KALJ,CAKU,CALV,EAKa,EALb,EAMIC,GANJ,CAMSC,OAAD,iBACF,oBAAC,UAAD;AACG,IAAA,GAAG,EAAEA,OAAO,CAACC,GADhB;AAEG,IAAA,QAAQ,EAAED,OAAO,CAACE,KAFrB;AAGG,IAAA,MAAM,EAAEF,OAAO,CAACH,MAHnB;AAIG,IAAA,IAAI,EAAEG,OAAO,CAACG,WAJjB;AAKG,IAAA,WAAW,EAAEH,OAAO,CAACL,WALxB;AAMG,IAAA,MAAM,EAAEK,OAAO,CAACJ,UANnB;AAOG,IAAA,GAAG,EAAEI,OAAO,CAACC,GAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPN,CADM,gBAmBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBApBN,CADH,CADH;AA2BF;;AAED,eAAe5B,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport BigArticle from \"./BigArticle\";\r\n\r\nfunction TopicsPage(props) {\r\n   const [articles, setArticles] = useState();\r\n   const valueToSend = topicsData.topic;\r\n   console.log(topicsData);\r\n\r\n   let options = {\r\n      method: \"POST\",\r\n      headers: {\r\n         \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(valueToSend),\r\n   };\r\n\r\n   fetch(\"/sources\", options)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n         setArticles(data.articles);\r\n      });\r\n\r\n   return (\r\n      <div className=\"navbar-container\">\r\n         <div className=\"left-section-news\">\r\n            {articles ? (\r\n               articles\r\n                  .filter(\r\n                     (art) =>\r\n                        !!art.description && !!art.urlToImage && !!art.author\r\n                  )\r\n                  .slice(0, 15)\r\n                  .map((article) => (\r\n                     <BigArticle\r\n                        key={article.url}\r\n                        headline={article.title}\r\n                        author={article.author}\r\n                        time={article.publishedAt}\r\n                        description={article.description}\r\n                        imgURL={article.urlToImage}\r\n                        url={article.url}\r\n                     />\r\n                  ))\r\n            ) : (\r\n               <div>nothing right now</div>\r\n            )}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TopicsPage;\r\n"]},"metadata":{},"sourceType":"module"}