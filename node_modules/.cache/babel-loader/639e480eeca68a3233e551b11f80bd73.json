{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-news-app\\\\news-api-react\\\\src\\\\components\\\\NavBar.js\";\nimport React, { useState, createContext } from \"react\";\nimport Languages from \"./Languages\";\nimport NavBarLinks from \"./NavBarLinks\";\nimport Temp from \"./Temp\";\nimport MainContainer from \"./MainContainer\";\nimport SecondContainer from \"./SecondContainer\";\nimport Date from \"./Date\";\nimport NavBarLinksTwo from \"./NavBarLinksTwo\";\nimport EmptySpace from \"./EmptySpace\";\nimport BigArticle from './BigArticle';\nimport LinearDeterminate from './LinearDeterminate';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nexport const DataProvider = createContext();\nexport default function NavegationBar() {\n  const [navData, setNavData] = useState();\n  const [sourceData, setSourceData] = useState();\n  const [langData, setLangData] = useState();\n\n  let eventToSend = e => {\n    let valueToSend = {\n      topic: e.target.innerText\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(valueToSend)\n    };\n    fetch('/topics', options).then(response => response.json()).then(data => {\n      setNavData(data.articles);\n      console.log(data.articles);\n    });\n  };\n\n  let secondEventToSend = e => {\n    let valueToSend = {\n      topic: e.target.innerText\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(valueToSend)\n    };\n    fetch('/sources', options).then(response => response.json()).then(data => {\n      setSourceData(data.articles);\n      console.log(data.articles);\n    });\n  };\n\n  let thirdEventToSend = e => {\n    let valueToSend = {\n      topic: e.target.innerText\n    };\n    console.log(e.target.innerText);\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(valueToSend)\n    };\n    fetch('/lang', options).then(response => response.json()).then(data => {\n      setLangData(data.articles);\n      console.log(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"navUl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Temp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 35\n    }\n  }, \"~D|Fetch~\"))), /*#__PURE__*/React.createElement(NavBarLinks, {\n    onClick: eventToSend,\n    className: \"linksNav\",\n    name: \"Topics\",\n    link1: \"Health\",\n    link2: \"Science\",\n    link3: \"Sports\",\n    link4: \"Entertainment\",\n    link5: \"Business\",\n    link6: \"Technology\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(NavBarLinksTwo, {\n    onClick: secondEventToSend,\n    className: \"linksNav\",\n    name: \"Sources\",\n    link1: \"The-Wall-Street-Journal\",\n    link2: \"National-Geographic\",\n    link3: \"ESPN\",\n    link4: \"Time\",\n    link5: \"Reuters\",\n    link6: \"BBC-NEWS\",\n    link7: \"CNN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Languages, {\n    onClick: thirdEventToSend,\n    className: \"linksNav\",\n    name: \"Lan\",\n    link1: \"English\",\n    link2: \"Spanish\",\n    link3: \"Russian\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Date, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(EmptySpace, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/react-news-app/news-api-react/src/components/NavBar.js"],"names":["React","useState","createContext","Languages","NavBarLinks","Temp","MainContainer","SecondContainer","Date","NavBarLinksTwo","EmptySpace","BigArticle","LinearDeterminate","BrowserRouter","Router","Switch","Route","Link","DataProvider","NavegationBar","navData","setNavData","sourceData","setSourceData","langData","setLangData","eventToSend","e","valueToSend","topic","target","innerText","options","method","headers","body","JSON","stringify","fetch","then","response","json","data","articles","console","log","secondEventToSend","thirdEventToSend"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SACGC,aAAa,IAAIC,MADpB,EAEGC,MAFH,EAGGC,KAHH,EAIGC,IAJH,QAKO,kBALP;AAQA,OAAO,MAAMC,YAAY,GAAGhB,aAAa,EAAlC;AAEP,eAAe,SAASiB,aAAT,GAAyB;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,EAAtC;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,EAA5C;AACA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,EAAxC;;AAEA,MAAIyB,WAAW,GAAIC,CAAD,IAAO;AACtB,QAAIC,WAAW,GAAG;AACfC,MAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASC;AADD,KAAlB;AAGA,UAAMC,OAAO,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACN,wBAAgB;AADV,OAFI;AAKbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,WAAf;AALO,KAAhB;AAOAU,IAAAA,KAAK,CAAC,SAAD,EAAYN,OAAZ,CAAL,CACIO,IADJ,CACUC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADvB,EAEIF,IAFJ,CAEUG,IAAD,IAAU;AACbrB,MAAAA,UAAU,CAACqB,IAAI,CAACC,QAAN,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,QAAjB;AACF,KALJ;AAMF,GAjBD;;AAkBA,MAAIG,iBAAiB,GAAInB,CAAD,IAAO;AAC5B,QAAIC,WAAW,GAAG;AACfC,MAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASC;AADD,KAAlB;AAGA,UAAMC,OAAO,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACN,wBAAgB;AADV,OAFI;AAKbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,WAAf;AALO,KAAhB;AAOAU,IAAAA,KAAK,CAAC,UAAD,EAAaN,OAAb,CAAL,CACIO,IADJ,CACUC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADvB,EAEIF,IAFJ,CAEUG,IAAD,IAAU;AACbnB,MAAAA,aAAa,CAACmB,IAAI,CAACC,QAAN,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,QAAjB;AACF,KALJ;AAMF,GAjBD;;AAkBA,MAAII,gBAAgB,GAAIpB,CAAD,IAAO;AAC3B,QAAIC,WAAW,GAAG;AACfC,MAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASC;AADD,KAAlB;AAGAa,IAAAA,OAAO,CAACC,GAAR,CAAYlB,CAAC,CAACG,MAAF,CAASC,SAArB;AAEA,UAAMC,OAAO,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACN,wBAAgB;AADV,OAFI;AAKbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,WAAf;AALO,KAAhB;AAOAU,IAAAA,KAAK,CAAC,OAAD,EAAUN,OAAV,CAAL,CACIO,IADJ,CACUC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADvB,EAEIF,IAFJ,CAEUG,IAAD,IAAU;AACbjB,MAAAA,WAAW,CAACiB,IAAI,CAACC,QAAN,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACF,KALJ;AAMF,GAnBD;;AAuBA,sBAGG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEG;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAEG;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAb,CAFH,CAFH,eAOG,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEhB,WAAtB;AACG,IAAA,SAAS,EAAC,UADb;AAEG,IAAA,IAAI,EAAC,QAFR;AAGG,IAAA,KAAK,EAAC,QAHT;AAIG,IAAA,KAAK,EAAC,SAJT;AAKG,IAAA,KAAK,EAAC,QALT;AAMG,IAAA,KAAK,EAAC,eANT;AAOG,IAAA,KAAK,EAAC,UAPT;AAQG,IAAA,KAAK,EAAC,YART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPH,eAiBG,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEoB,iBAAzB;AACG,IAAA,SAAS,EAAC,UADb;AAEG,IAAA,IAAI,EAAC,SAFR;AAGG,IAAA,KAAK,EAAC,yBAHT;AAIG,IAAA,KAAK,EAAC,qBAJT;AAKG,IAAA,KAAK,EAAC,MALT;AAMG,IAAA,KAAK,EAAC,MANT;AAOG,IAAA,KAAK,EAAC,SAPT;AAQG,IAAA,KAAK,EAAC,UART;AASG,IAAA,KAAK,EAAC,KATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBH,eA6BG,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEC,gBAApB;AACG,IAAA,SAAS,EAAC,UADb;AAEG,IAAA,IAAI,EAAC,KAFR;AAGG,IAAA,KAAK,EAAC,SAHT;AAIG,IAAA,KAAK,EAAC,SAJT;AAKG,IAAA,KAAK,EAAC,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BH,CADH,eAuCG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCH,CAFH,eA4CG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CH,CAFH,CAHH;AAiIF","sourcesContent":["import React, { useState, createContext } from \"react\";\r\nimport Languages from \"./Languages\";\r\nimport NavBarLinks from \"./NavBarLinks\";\r\nimport Temp from \"./Temp\";\r\nimport MainContainer from \"./MainContainer\"\r\nimport SecondContainer from \"./SecondContainer\"\r\nimport Date from \"./Date\"\r\nimport NavBarLinksTwo from \"./NavBarLinksTwo\";\r\nimport EmptySpace from \"./EmptySpace\";\r\nimport BigArticle from './BigArticle'\r\nimport LinearDeterminate from './LinearDeterminate'\r\nimport {\r\n   BrowserRouter as Router,\r\n   Switch,\r\n   Route,\r\n   Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nexport const DataProvider = createContext()\r\n\r\nexport default function NavegationBar() {\r\n   const [navData, setNavData] = useState();\r\n   const [sourceData, setSourceData] = useState();\r\n   const [langData, setLangData] = useState();\r\n\r\n   let eventToSend = (e) => {\r\n      let valueToSend = {\r\n         topic: e.target.innerText\r\n      }\r\n      const options = {\r\n         method: 'POST',\r\n         headers: {\r\n            'Content-Type': 'application/json'\r\n         },\r\n         body: JSON.stringify(valueToSend)\r\n      };\r\n      fetch('/topics', options)\r\n         .then((response) => response.json())\r\n         .then((data) => {\r\n            setNavData(data.articles);\r\n            console.log(data.articles)\r\n         })\r\n   }\r\n   let secondEventToSend = (e) => {\r\n      let valueToSend = {\r\n         topic: e.target.innerText\r\n      }\r\n      const options = {\r\n         method: 'POST',\r\n         headers: {\r\n            'Content-Type': 'application/json'\r\n         },\r\n         body: JSON.stringify(valueToSend)\r\n      };\r\n      fetch('/sources', options)\r\n         .then((response) => response.json())\r\n         .then((data) => {\r\n            setSourceData(data.articles);\r\n            console.log(data.articles)\r\n         })\r\n   }\r\n   let thirdEventToSend = (e) => {\r\n      let valueToSend = {\r\n         topic: e.target.innerText\r\n      }\r\n      console.log(e.target.innerText)\r\n\r\n      const options = {\r\n         method: 'POST',\r\n         headers: {\r\n            'Content-Type': 'application/json'\r\n         },\r\n         body: JSON.stringify(valueToSend)\r\n      };\r\n      fetch('/lang', options)\r\n         .then((response) => response.json())\r\n         .then((data) => {\r\n            setLangData(data.articles);\r\n            console.log(data)\r\n         })\r\n   }\r\n\r\n\r\n\r\n   return (\r\n\r\n\r\n      <Router>\r\n\r\n         <div>\r\n\r\n            <div className=\"navbar\" >\r\n               <ul className=\"navUl\">\r\n                  <Temp />\r\n                  <h1 className=\"logo\">\r\n\r\n                     <Link to=\"/\"><p>~D|Fetch~</p></Link>\r\n                  </h1>\r\n\r\n                  <NavBarLinks onClick={eventToSend}\r\n                     className=\"linksNav\"\r\n                     name=\"Topics\"\r\n                     link1=\"Health\"\r\n                     link2=\"Science\"\r\n                     link3=\"Sports\"\r\n                     link4=\"Entertainment\"\r\n                     link5=\"Business\"\r\n                     link6=\"Technology\"\r\n                  />\r\n                  <NavBarLinksTwo onClick={secondEventToSend}\r\n                     className=\"linksNav\"\r\n                     name=\"Sources\"\r\n                     link1=\"The-Wall-Street-Journal\"\r\n                     link2=\"National-Geographic\"\r\n                     link3=\"ESPN\"\r\n                     link4=\"Time\"\r\n                     link5=\"Reuters\"\r\n                     link6=\"BBC-NEWS\"\r\n                     link7=\"CNN\"\r\n\r\n                  />\r\n                  <Languages onClick={thirdEventToSend}\r\n                     className=\"linksNav\"\r\n                     name=\"Lan\"\r\n                     link1=\"English\"\r\n                     link2=\"Spanish\"\r\n                     link3=\"Russian\"\r\n                  />\r\n               </ul>\r\n\r\n               <Date />\r\n\r\n            </div>\r\n            <EmptySpace />\r\n\r\n            {/* <Switch>\r\n\r\n               <Route exact path=\"/topics\">\r\n                  {navData ? <div className=\"navbar-container\">\r\n                     <div className=\"left-section-news\">\r\n                        {navData\r\n                           .filter(\r\n                              (art) => !!art.description && !!art.urlToImage && !!art.author\r\n                           )\r\n                           .slice(0, 10)\r\n                           .map((article) => (\r\n                              <BigArticle\r\n                                 key={article.url}\r\n                                 headline={article.title}\r\n                                 author={article.author}\r\n                                 time={article.publishedAt}\r\n                                 description={article.description}\r\n                                 imgURL={article.urlToImage}\r\n                                 url={article.url}\r\n                              />\r\n                           ))}\r\n                     </div>\r\n                  </div> : <LinearDeterminate />}\r\n               </Route>\r\n               <Route exact path=\"/sources\">\r\n                  {sourceData ? <div className=\"navbar-container\">\r\n                     <div className=\"left-section-news\">\r\n                        {sourceData\r\n                           .filter(\r\n                              (art) => !!art.description && !!art.urlToImage && !!art.author\r\n                           )\r\n                           .slice(0, 10)\r\n                           .map((article) => (\r\n                              <BigArticle\r\n                                 key={article.url}\r\n                                 headline={article.title}\r\n                                 author={article.author}\r\n                                 time={article.publishedAt}\r\n                                 description={article.description}\r\n                                 imgURL={article.urlToImage}\r\n                                 url={article.url}\r\n                              />\r\n                           ))}\r\n                     </div>\r\n                  </div> : <LinearDeterminate />}\r\n               </Route>\r\n               <Route exact path=\"/lang\">\r\n                  {langData ? <div className=\"navbar-container\">\r\n                     <div className=\"left-section-news\">\r\n                        {langData\r\n                           .filter(\r\n                              (art) => !!art.description && !!art.urlToImage && !!art.author\r\n                           )\r\n                           .slice(0, 10)\r\n                           .map((article) => (\r\n                              <BigArticle\r\n                                 key={article.url}\r\n                                 headline={article.title}\r\n                                 author={article.author}\r\n                                 time={article.publishedAt}\r\n                                 description={article.description}\r\n                                 imgURL={article.urlToImage}\r\n                                 url={article.url}\r\n                              />\r\n                           ))}\r\n                     </div>\r\n                  </div> : <LinearDeterminate />}\r\n               </Route>\r\n               <Route exact path=\"/\">\r\n\r\n                  <MainContainer />\r\n                  <SecondContainer />\r\n               </Route>\r\n            </Switch> */}\r\n         </div>\r\n      </Router>\r\n\r\n   );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}