{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-news-app\\\\news-api-react\\\\src\\\\components\\\\Temp.js\";\nimport React, { useEffect, useState } from \"react\";\nexport default function Temp() {\n  const [location, setLocation] = useState([]);\n  useEffect(() => {\n    getLocation();\n  }, []); //ask for location\n\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      console.log(\"couldnt set the position\");\n    }\n  } //POST lat and long\n  //set geolocation\n\n\n  function showPosition(position) {\n    console.log(position.coords);\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n    const weatherData = {\n      lat,\n      lon\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(weatherData)\n    };\n    fetch(\"/weather\", options);\n  } //    fetch the data GET\n  //set the state with the data\n\n\n  fetch(\"/weather\", {\n    method: \"GET\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }).then(res => res.json()).then(weatherdata => console.log(weatherdata));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"temp is\", location);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/react-news-app/news-api-react/src/components/Temp.js"],"names":["React","useEffect","useState","Temp","location","setLocation","getLocation","navigator","geolocation","getCurrentPosition","showPosition","console","log","position","coords","lat","latitude","lon","longitude","weatherData","options","method","headers","body","JSON","stringify","fetch","then","res","json","weatherdata"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACbK,IAAAA,WAAW;AACb,GAFQ,EAEN,EAFM,CAAT,CAH4B,CAM5B;;AACA,WAASA,WAAT,GAAuB;AACpB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACxBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,YAAzC;AACF,KAFD,MAEO;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACF;AACH,GAb2B,CAc5B;AACA;;;AACA,WAASF,YAAT,CAAsBG,QAAtB,EAAgC;AAC7BF,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,MAArB;AACA,QAAIC,GAAG,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,QAA1B;AACA,QAAIC,GAAG,GAAGJ,QAAQ,CAACC,MAAT,CAAgBI,SAA1B;AACA,UAAMC,WAAW,GAAG;AAAEJ,MAAAA,GAAF;AAAOE,MAAAA;AAAP,KAApB;AACA,UAAMG,OAAO,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACN,wBAAgB;AADV,OAFI;AAKbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf;AALO,KAAhB;AAOAO,IAAAA,KAAK,CAAC,UAAD,EAAaN,OAAb,CAAL;AACF,GA7B2B,CA+B5B;AACA;;;AAEAM,EAAAA,KAAK,CAAC,UAAD,EAAa;AACfL,IAAAA,MAAM,EAAE,KADO;AAEfC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAFM,GAAb,CAAL,CAIIK,IAJJ,CAIUC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJlB,EAKIF,IALJ,CAKUG,WAAD,IAAiBnB,OAAO,CAACC,GAAR,CAAYkB,WAAZ,CAL1B;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAqC1B,QAArC,CAAP;AACF","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function Temp() {\r\n   const [location, setLocation] = useState([]);\r\n\r\n   useEffect(() => {\r\n      getLocation();\r\n   }, []);\r\n   //ask for location\r\n   function getLocation() {\r\n      if (navigator.geolocation) {\r\n         navigator.geolocation.getCurrentPosition(showPosition);\r\n      } else {\r\n         console.log(\"couldnt set the position\");\r\n      }\r\n   }\r\n   //POST lat and long\r\n   //set geolocation\r\n   function showPosition(position) {\r\n      console.log(position.coords);\r\n      let lat = position.coords.latitude;\r\n      let lon = position.coords.longitude;\r\n      const weatherData = { lat, lon };\r\n      const options = {\r\n         method: \"POST\",\r\n         headers: {\r\n            \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify(weatherData),\r\n      };\r\n      fetch(\"/weather\", options);\r\n   }\r\n\r\n   //    fetch the data GET\r\n   //set the state with the data\r\n\r\n   fetch(\"/weather\", {\r\n      method: \"GET\",\r\n      headers: { \"Content-type\": \"application/json\" },\r\n   })\r\n      .then((res) => res.json())\r\n      .then((weatherdata) => console.log(weatherdata));\r\n\r\n   return <div className=\"temperature\">temp is{location}</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}