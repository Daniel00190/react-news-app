{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-news-app\\\\news-api-react\\\\src\\\\components\\\\Temp.js\";\nimport React, { useEffect, useState } from 'react';\nexport default function Temp() {\n  const [location, setLocation] = useState([]);\n  useEffect(() => {\n    //ask for location\n    function getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(showPosition);\n      } else {\n        console.log(\"couldnt set the position\");\n      }\n    } //POST lat and long  \n    //set geolocation\n\n\n    function showPosition(position) {\n      console.log(position.coords);\n      let lat = position.coords.latitude;\n      let lon = position.coords.longitude;\n      const weatherData = {\n        lat,\n        lon\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(weatherData)\n      };\n      fetch('/weather', options);\n    } //    fetch the data GET\n    //set the state with the data\n\n\n    fetch('/weather', {\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json;charset=UTF-8\"\n      }\n    }).then(res => res.json()).then(data => console.log(data));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, location);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/react-news-app/news-api-react/src/components/Temp.js"],"names":["React","useEffect","useState","Temp","location","setLocation","getLocation","navigator","geolocation","getCurrentPosition","showPosition","console","log","position","coords","lat","latitude","lon","longitude","weatherData","options","method","headers","body","JSON","stringify","fetch","then","res","json","data"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA6BC,QAA7B,QAA6C,OAA7C;AAIA,eAAe,SAASC,IAAT,GAAgB;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACf;AACA,aAASK,WAAT,GAAuB;AACrB,UAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,QAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,YAAzC;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;AACH,KARe,CAShB;AACA;;;AACA,aAASF,YAAT,CAAsBG,QAAtB,EAAgC;AAC7BF,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,MAArB;AACA,UAAIC,GAAG,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,QAA1B;AACA,UAAIC,GAAG,GAAGJ,QAAQ,CAACC,MAAT,CAAgBI,SAA1B;AACA,YAAMC,WAAW,GAAG;AAAEJ,QAAAA,GAAF;AAAOE,QAAAA;AAAP,OAApB;AACE,YAAMG,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE,MADM;AAEdC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFK;AAKdC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf;AALQ,OAAhB;AAOEO,MAAAA,KAAK,CAAC,UAAD,EAAaN,OAAb,CAAL;AACL,KAxBc,CA0BnB;AACA;;;AACGM,IAAAA,KAAK,CAAC,UAAD,EAAa;AACjBL,MAAAA,MAAM,EAAE,KADS;AAEjBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAFQ,KAAb,CAAL,CAICK,IAJD,CAIMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJb,EAKCF,IALD,CAKMG,IAAI,IAAInB,OAAO,CAACC,GAAR,CAAYkB,IAAZ,CALd;AASA,GArCQ,EAqCN,EArCM,CAAT;AAiDA,sBAAQ;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8B1B,QAA9B,CAAR;AACH","sourcesContent":["import React , { useEffect , useState } from 'react';\r\n\r\n\r\n\r\nexport default function Temp() {\r\n    const [location, setLocation] = useState([]);\r\n  \r\n    useEffect( () => {\r\n      //ask for location\r\n      function getLocation() {\r\n        if (navigator.geolocation) {\r\n          navigator.geolocation.getCurrentPosition(showPosition);\r\n        } else {\r\n          console.log(\"couldnt set the position\")\r\n        }\r\n     }\r\n     //POST lat and long  \r\n     //set geolocation\r\n     function showPosition(position) {\r\n        console.log(position.coords)\r\n        let lat = position.coords.latitude\r\n        let lon = position.coords.longitude\r\n        const weatherData = { lat, lon};\r\n          const options = {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(weatherData)\r\n            };\r\n            fetch('/weather', options)\r\n      }\r\n          \r\n  //    fetch the data GET\r\n  //set the state with the data\r\n     fetch('/weather', {\r\n      method: \"GET\",\r\n      headers: {\"Content-type\": \"application/json;charset=UTF-8\"}\r\n    })\r\n     .then(res => res.json())\r\n     .then(data => console.log(data));\r\n   \r\n   \r\n   \r\n    }, []);\r\n  \r\n    \r\n         \r\n         \r\n       \r\n       \r\n         \r\n      \r\n    \r\n\r\n\r\n    return( <div className=\"temperature\">{location}</div> ) \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}