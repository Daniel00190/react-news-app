{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-news-app\\\\news-api-react\\\\src\\\\components\\\\NavBar.js\";\nimport React, { useState, createContext } from \"react\";\nimport Languages from \"./Languages\";\nimport NavBarLinks from \"./NavBarLinks\";\nimport Temp from \"./Temp\";\nimport MainContainer from \"./MainContainer\";\nimport SecondContainer from \"./SecondContainer\";\nimport Date from \"./Date\";\nimport NavBarLinksTwo from \"./NavBarLinksTwo\";\nimport EmptySpace from \"./EmptySpace\";\nimport BigArticle from \"./BigArticle\";\nimport LinearDeterminate from \"./LinearDeterminate\";\nimport useEvent from \"./useEventHook\";\nimport useFetch from \"./myFetchHook\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nexport const DataProvider = createContext();\nexport default function NavegationBar() {\n  const [navData, setNavData] = useState();\n  let options = {};\n\n  let firstEventToSend = e => {\n    let valueToSend = {\n      topic: e.target.innerText\n    };\n    options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(valueToSend)\n    };\n  };\n\n  const iamFetching = url => {\n    fetch(`${url}`, options).then(response => response.json()).then(data => {\n      setNavData(data.articles);\n      console.log(data.articles);\n    });\n  };\n\n  let secondEventToSend = e => {\n    let valueToSend = {\n      topic: e.target.innerText\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(valueToSend)\n    };\n    fetch(\"/sources\", options).then(response => response.json()).then(data => {\n      setNavData(data.articles);\n      console.log(data.articles);\n    });\n  };\n\n  let thirdEventToSend = e => {\n    let valueToSend = {\n      topic: e.target.innerText\n    };\n    console.log(e.target.innerText);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(valueToSend)\n    };\n    fetch(\"/lang\", options).then(response => response.json()).then(data => {\n      setNavData(data.articles);\n      console.log(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"navUl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"~D|Fetch~\"))), /*#__PURE__*/React.createElement(NavBarLinks, {\n    onClick: firstEventToSend,\n    className: \"linksNav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(NavBarLinksTwo, {\n    onClick: secondEventToSend,\n    className: \"linksNav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Languages, {\n    onClick: (thirdEventToSend, iamFetching),\n    className: \"linksNav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Date, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(EmptySpace, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/topics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 16\n    }\n  }, navData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-section-news\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, navData.filter(art => !!art.description && !!art.urlToImage && !!art.author).slice(0, 10).map(article => /*#__PURE__*/React.createElement(BigArticle, {\n    key: article.url,\n    headline: article.title,\n    author: article.author,\n    time: article.publishedAt,\n    description: article.description,\n    imgURL: article.urlToImage,\n    url: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 34\n    }\n  })))) : /*#__PURE__*/React.createElement(LinearDeterminate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/sources\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 16\n    }\n  }, navData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-section-news\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, navData.filter(art => !!art.description && !!art.urlToImage && !!art.author).slice(0, 10).map(article => /*#__PURE__*/React.createElement(BigArticle, {\n    key: article.url,\n    headline: article.title,\n    author: article.author,\n    time: article.publishedAt,\n    description: article.description,\n    imgURL: article.urlToImage,\n    url: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 34\n    }\n  })))) : /*#__PURE__*/React.createElement(LinearDeterminate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/lang\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 16\n    }\n  }, navData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-section-news\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, navData.filter(art => !!art.description && !!art.urlToImage && !!art.author).slice(0, 10).map(article => /*#__PURE__*/React.createElement(BigArticle, {\n    key: article.url,\n    headline: article.title,\n    author: article.author,\n    time: article.publishedAt,\n    description: article.description,\n    imgURL: article.urlToImage,\n    url: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 34\n    }\n  })))) : /*#__PURE__*/React.createElement(LinearDeterminate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 16\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/react-news-app/news-api-react/src/components/NavBar.js"],"names":["React","useState","createContext","Languages","NavBarLinks","Temp","MainContainer","SecondContainer","Date","NavBarLinksTwo","EmptySpace","BigArticle","LinearDeterminate","useEvent","useFetch","BrowserRouter","Router","Switch","Route","Link","DataProvider","NavegationBar","navData","setNavData","options","firstEventToSend","e","valueToSend","topic","target","innerText","method","headers","body","JSON","stringify","iamFetching","url","fetch","then","response","json","data","articles","console","log","secondEventToSend","thirdEventToSend","filter","art","description","urlToImage","author","slice","map","article","title","publishedAt"],"mappings":"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","sourcesContent":["import React, { useState, createContext } from \"react\";\r\nimport Languages from \"./Languages\";\r\nimport NavBarLinks from \"./NavBarLinks\";\r\nimport Temp from \"./Temp\";\r\nimport MainContainer from \"./MainContainer\";\r\nimport SecondContainer from \"./SecondContainer\";\r\nimport Date from \"./Date\";\r\nimport NavBarLinksTwo from \"./NavBarLinksTwo\";\r\nimport EmptySpace from \"./EmptySpace\";\r\nimport BigArticle from \"./BigArticle\";\r\nimport LinearDeterminate from \"./LinearDeterminate\";\r\nimport useEvent from \"./useEventHook\";\r\nimport useFetch from \"./myFetchHook\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nexport const DataProvider = createContext();\r\n\r\nexport default function NavegationBar() {\r\n   const [navData, setNavData] = useState();\r\n   let options = {};\r\n   let firstEventToSend = (e) => {\r\n      let valueToSend = {\r\n         topic: e.target.innerText,\r\n      };\r\n      options = {\r\n         method: \"POST\",\r\n         headers: {\r\n            \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify(valueToSend),\r\n      };\r\n   };\r\n   const iamFetching = (url) => {\r\n      fetch(`${url}`, options)\r\n         .then((response) => response.json())\r\n         .then((data) => {\r\n            setNavData(data.articles);\r\n            console.log(data.articles);\r\n         });\r\n   };\r\n\r\n   let secondEventToSend = (e) => {\r\n      let valueToSend = {\r\n         topic: e.target.innerText,\r\n      };\r\n      const options = {\r\n         method: \"POST\",\r\n         headers: {\r\n            \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify(valueToSend),\r\n      };\r\n      fetch(\"/sources\", options)\r\n         .then((response) => response.json())\r\n         .then((data) => {\r\n            setNavData(data.articles);\r\n            console.log(data.articles);\r\n         });\r\n   };\r\n   let thirdEventToSend = (e) => {\r\n      let valueToSend = {\r\n         topic: e.target.innerText,\r\n      };\r\n      console.log(e.target.innerText);\r\n\r\n      const options = {\r\n         method: \"POST\",\r\n         headers: {\r\n            \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify(valueToSend),\r\n      };\r\n      fetch(\"/lang\", options)\r\n         .then((response) => response.json())\r\n         .then((data) => {\r\n            setNavData(data.articles);\r\n            console.log(data);\r\n         });\r\n   };\r\n\r\n   return (\r\n      <Router>\r\n         <div>\r\n            <div className=\"navbar\">\r\n               <ul className=\"navUl\">\r\n                  {/* <Temp /> */}\r\n                  <h1 className=\"logo\">\r\n                     <Link to=\"/\">\r\n                        <p>~D|Fetch~</p>\r\n                     </Link>\r\n                  </h1>\r\n                  <NavBarLinks\r\n                     onClick={firstEventToSend}\r\n                     className=\"linksNav\"\r\n                  />\r\n                  <NavBarLinksTwo\r\n                     onClick={secondEventToSend}\r\n                     className=\"linksNav\"\r\n                  />\r\n                  <Languages\r\n                     onClick={(thirdEventToSend, iamFetching)}\r\n                     className=\"linksNav\"\r\n                  />\r\n               </ul>\r\n               <Date />\r\n            </div>\r\n\r\n            <EmptySpace />\r\n\r\n            <Switch>\r\n               <Route exact path=\"/topics\">\r\n                  {navData ? (\r\n                     <div className=\"navbar-container\">\r\n                        <div className=\"left-section-news\">\r\n                           {navData\r\n                              .filter(\r\n                                 (art) =>\r\n                                    !!art.description &&\r\n                                    !!art.urlToImage &&\r\n                                    !!art.author\r\n                              )\r\n                              .slice(0, 10)\r\n                              .map((article) => (\r\n                                 <BigArticle\r\n                                    key={article.url}\r\n                                    headline={article.title}\r\n                                    author={article.author}\r\n                                    time={article.publishedAt}\r\n                                    description={article.description}\r\n                                    imgURL={article.urlToImage}\r\n                                    url={article.url}\r\n                                 />\r\n                              ))}\r\n                        </div>\r\n                     </div>\r\n                  ) : (\r\n                     <LinearDeterminate />\r\n                  )}\r\n               </Route>\r\n               <Route exact path=\"/sources\">\r\n                  {navData ? (\r\n                     <div className=\"navbar-container\">\r\n                        <div className=\"left-section-news\">\r\n                           {navData\r\n                              .filter(\r\n                                 (art) =>\r\n                                    !!art.description &&\r\n                                    !!art.urlToImage &&\r\n                                    !!art.author\r\n                              )\r\n                              .slice(0, 10)\r\n                              .map((article) => (\r\n                                 <BigArticle\r\n                                    key={article.url}\r\n                                    headline={article.title}\r\n                                    author={article.author}\r\n                                    time={article.publishedAt}\r\n                                    description={article.description}\r\n                                    imgURL={article.urlToImage}\r\n                                    url={article.url}\r\n                                 />\r\n                              ))}\r\n                        </div>\r\n                     </div>\r\n                  ) : (\r\n                     <LinearDeterminate />\r\n                  )}\r\n               </Route>\r\n               <Route exact path=\"/lang\">\r\n                  {navData ? (\r\n                     <div className=\"navbar-container\">\r\n                        <div className=\"left-section-news\">\r\n                           {navData\r\n                              .filter(\r\n                                 (art) =>\r\n                                    !!art.description &&\r\n                                    !!art.urlToImage &&\r\n                                    !!art.author\r\n                              )\r\n                              .slice(0, 10)\r\n                              .map((article) => (\r\n                                 <BigArticle\r\n                                    key={article.url}\r\n                                    headline={article.title}\r\n                                    author={article.author}\r\n                                    time={article.publishedAt}\r\n                                    description={article.description}\r\n                                    imgURL={article.urlToImage}\r\n                                    url={article.url}\r\n                                 />\r\n                              ))}\r\n                        </div>\r\n                     </div>\r\n                  ) : (\r\n                     <LinearDeterminate />\r\n                  )}\r\n               </Route>\r\n               <Route exact path=\"/\">\r\n                  {/* <MainContainer />\r\n                  <SecondContainer /> */}\r\n               </Route>\r\n            </Switch>\r\n         </div>\r\n      </Router>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}