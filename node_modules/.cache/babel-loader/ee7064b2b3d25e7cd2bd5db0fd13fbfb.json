{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-news-app\\\\news-api-react\\\\src\\\\Lang\\\\LangComp.js\";\nimport React from \"react\";\n\nfunction LangComp(props) {\n  const data = props.news;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-section-news\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }\n  }, data ? data.filter(art => !!art.urlToImage && !!art.url).slice(6, 7).map(article => /*#__PURE__*/React.createElement(XlArticle, {\n    imgURL: article.urlToImage,\n    headline: article.title,\n    link: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 22\n    }\n  })) : /*#__PURE__*/React.createElement(LinearDeterminate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }\n  }), data ? data.filter(art => !!art.description && !!art.urlToImage && !!art.author).slice(3, 6).map(article => /*#__PURE__*/React.createElement(BigArticle, {\n    key: article.url,\n    headline: article.title,\n    author: article.author,\n    time: article.publishedAt,\n    description: article.description,\n    imgURL: article.urlToImage,\n    url: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }\n  })) : /*#__PURE__*/React.createElement(LinearDeterminate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-section-news\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }, data ? data.filter(art => !!art.urlToImage && !!art.title && !!art.url).slice(0, 5).map(article => /*#__PURE__*/React.createElement(HeadlineWithImg, {\n    imgurl: article.urlToImage,\n    headline: article.title,\n    url: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }\n  })) : /*#__PURE__*/React.createElement(LinearDeterminate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"firstSectionNews\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blackTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Top Stories\"), data ? data.slice(5, 15).map(article => /*#__PURE__*/React.createElement(SmallHeadlines, {\n    headline: article.title,\n    url: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }\n  })) : /*#__PURE__*/React.createElement(LinearDeterminate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }\n  })));\n}\n\nexport default LangComp;","map":{"version":3,"sources":["D:/react-news-app/news-api-react/src/Lang/LangComp.js"],"names":["React","LangComp","props","data","news","filter","art","urlToImage","url","slice","map","article","title","description","author","publishedAt"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nfunction LangComp(props) {\r\n   const data = props.news;\r\n   return (\r\n      <div className=\"main-container\">\r\n         <div className=\"left-section-news\">\r\n            {data ? (\r\n               data\r\n                  .filter((art) => !!art.urlToImage && !!art.url)\r\n                  .slice(6, 7)\r\n                  .map((article) => (\r\n                     <XlArticle\r\n                        imgURL={article.urlToImage}\r\n                        headline={article.title}\r\n                        link={article.url}\r\n                     />\r\n                  ))\r\n            ) : (\r\n               <LinearDeterminate />\r\n            )}\r\n            {data ? (\r\n               data\r\n                  .filter(\r\n                     (art) =>\r\n                        !!art.description && !!art.urlToImage && !!art.author\r\n                  )\r\n                  .slice(3, 6)\r\n                  .map((article) => (\r\n                     <BigArticle\r\n                        key={article.url}\r\n                        headline={article.title}\r\n                        author={article.author}\r\n                        time={article.publishedAt}\r\n                        description={article.description}\r\n                        imgURL={article.urlToImage}\r\n                        url={article.url}\r\n                     />\r\n                  ))\r\n            ) : (\r\n               <LinearDeterminate />\r\n            )}\r\n         </div>\r\n         <div className=\"right-section-news\">\r\n            {data ? (\r\n               data\r\n                  .filter((art) => !!art.urlToImage && !!art.title && !!art.url)\r\n                  .slice(0, 5)\r\n                  .map((article) => (\r\n                     <HeadlineWithImg\r\n                        imgurl={article.urlToImage}\r\n                        headline={article.title}\r\n                        url={article.url}\r\n                     />\r\n                  ))\r\n            ) : (\r\n               <LinearDeterminate />\r\n            )}\r\n         </div>\r\n         <div className=\"firstSectionNews\">\r\n            <div className=\"blackTitle\">Top Stories</div>\r\n            {data ? (\r\n               data\r\n                  .slice(5, 15)\r\n                  .map((article) => (\r\n                     <SmallHeadlines\r\n                        headline={article.title}\r\n                        url={article.url}\r\n                     />\r\n                  ))\r\n            ) : (\r\n               <LinearDeterminate />\r\n            )}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default LangComp;\r\n"]},"metadata":{},"sourceType":"module"}