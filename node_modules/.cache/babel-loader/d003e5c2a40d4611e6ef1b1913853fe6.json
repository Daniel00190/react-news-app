{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-news-app\\\\news-api-react\\\\src\\\\components\\\\NavBar.js\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport Languages from \"./Languages\";\nimport NavBarLinks from \"./NavBarLinks\";\nimport Temp from \"./Temp\";\nimport MainContainer from \"./MainContainer\";\nimport SecondContainer from \"./SecondContainer\";\nimport Date from \"./Date\";\nimport NavBarLinksTwo from \"./NavBarLinksTwo\";\nimport EmptySpace from \"./EmptySpace\";\nimport BigArticle from \"./BigArticle\";\nimport LinearDeterminate from \"./LinearDeterminate\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nexport const DataProvider = createContext();\nexport default function NavegationBar() {\n  const [navData, setNavData] = useState([localStorage.getItem(\"notes\")]);\n\n  let firstEventToSend = (e, url) => {\n    let valueToSend = {\n      topic: e.target.innerText\n    };\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(valueToSend)\n    };\n    fetch(`${url}`, options).then(response => response.json()).then(data => {\n      setNavData(data.articles);\n      localStorage.setItem(\"notes\", data.articles);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"navUl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Temp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"~D|Fetch~\"))), /*#__PURE__*/React.createElement(NavBarLinks, {\n    onClick: e => {\n      firstEventToSend(e, \"/topics\");\n    },\n    className: \"linksNav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(NavBarLinksTwo, {\n    onClick: e => {\n      firstEventToSend(e, \"/sources\");\n    },\n    className: \"linksNav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Languages, {\n    onClick: e => {\n      firstEventToSend(e, \"/lang\");\n    },\n    className: \"linksNav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Date, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(EmptySpace, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/topics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }\n  }, navData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-section-news\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, navData.filter(art => !!art.description && !!art.urlToImage && !!art.author).slice(0, 15).map(article => /*#__PURE__*/React.createElement(BigArticle, {\n    key: article.url,\n    headline: article.title,\n    author: article.author,\n    time: article.publishedAt,\n    description: article.description,\n    imgURL: article.urlToImage,\n    url: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 34\n    }\n  })))) : /*#__PURE__*/React.createElement(LinearDeterminate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/sources\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 16\n    }\n  }, navData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-section-news\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, navData.filter(art => !!art.description && !!art.urlToImage && !!art.author).slice(0, 15).map(article => /*#__PURE__*/React.createElement(BigArticle, {\n    key: article.url,\n    headline: article.title,\n    author: article.author,\n    time: article.publishedAt,\n    description: article.description,\n    imgURL: article.urlToImage,\n    url: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 34\n    }\n  })))) : /*#__PURE__*/React.createElement(LinearDeterminate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/lang\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 16\n    }\n  }, navData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-section-news\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, navData.filter(art => !!art.description && !!art.urlToImage && !!art.author).slice(0, 15).map(article => /*#__PURE__*/React.createElement(BigArticle, {\n    key: article.url,\n    headline: article.title,\n    author: article.author,\n    time: article.publishedAt,\n    description: article.description,\n    imgURL: article.urlToImage,\n    url: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 34\n    }\n  })))) : /*#__PURE__*/React.createElement(LinearDeterminate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 16\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/react-news-app/news-api-react/src/components/NavBar.js"],"names":["React","useState","createContext","useEffect","Languages","NavBarLinks","Temp","MainContainer","SecondContainer","Date","NavBarLinksTwo","EmptySpace","BigArticle","LinearDeterminate","BrowserRouter","Router","Switch","Route","Link","DataProvider","NavegationBar","navData","setNavData","localStorage","getItem","firstEventToSend","e","url","valueToSend","topic","target","innerText","options","method","headers","body","JSON","stringify","fetch","then","response","json","data","articles","setItem","filter","art","description","urlToImage","author","slice","map","article","title","publishedAt"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\r\nimport Languages from \"./Languages\";\r\nimport NavBarLinks from \"./NavBarLinks\";\r\nimport Temp from \"./Temp\";\r\nimport MainContainer from \"./MainContainer\";\r\nimport SecondContainer from \"./SecondContainer\";\r\nimport Date from \"./Date\";\r\nimport NavBarLinksTwo from \"./NavBarLinksTwo\";\r\nimport EmptySpace from \"./EmptySpace\";\r\nimport BigArticle from \"./BigArticle\";\r\nimport LinearDeterminate from \"./LinearDeterminate\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nexport const DataProvider = createContext();\r\n\r\nexport default function NavegationBar() {\r\n   const [navData, setNavData] = useState([localStorage.getItem(\"notes\")]);\r\n\r\n   let firstEventToSend = (e, url) => {\r\n      let valueToSend = {\r\n         topic: e.target.innerText,\r\n      };\r\n      let options = {\r\n         method: \"POST\",\r\n         headers: {\r\n            \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify(valueToSend),\r\n      };\r\n\r\n      fetch(`${url}`, options)\r\n         .then((response) => response.json())\r\n         .then((data) => {\r\n            setNavData(data.articles);\r\n            localStorage.setItem(\"notes\", data.articles);\r\n         });\r\n   };\r\n\r\n   return (\r\n      <Router>\r\n         <div>\r\n            <div className=\"navbar\">\r\n               <ul className=\"navUl\">\r\n                  <Temp />\r\n                  <h1 className=\"logo\">\r\n                     <Link to=\"/\">\r\n                        <p>~D|Fetch~</p>\r\n                     </Link>\r\n                  </h1>\r\n                  <NavBarLinks\r\n                     onClick={(e) => {\r\n                        firstEventToSend(e, \"/topics\");\r\n                     }}\r\n                     className=\"linksNav\"\r\n                  />\r\n                  <NavBarLinksTwo\r\n                     onClick={(e) => {\r\n                        firstEventToSend(e, \"/sources\");\r\n                     }}\r\n                     className=\"linksNav\"\r\n                  />\r\n                  <Languages\r\n                     onClick={(e) => {\r\n                        firstEventToSend(e, \"/lang\");\r\n                     }}\r\n                     className=\"linksNav\"\r\n                  />\r\n               </ul>\r\n               <Date />\r\n            </div>\r\n\r\n            <EmptySpace />\r\n\r\n            <Switch>\r\n               <Route exact path=\"/topics\">\r\n                  {navData ? (\r\n                     <div className=\"navbar-container\">\r\n                        <div className=\"left-section-news\">\r\n                           {navData\r\n                              .filter(\r\n                                 (art) =>\r\n                                    !!art.description &&\r\n                                    !!art.urlToImage &&\r\n                                    !!art.author\r\n                              )\r\n                              .slice(0, 15)\r\n                              .map((article) => (\r\n                                 <BigArticle\r\n                                    key={article.url}\r\n                                    headline={article.title}\r\n                                    author={article.author}\r\n                                    time={article.publishedAt}\r\n                                    description={article.description}\r\n                                    imgURL={article.urlToImage}\r\n                                    url={article.url}\r\n                                 />\r\n                              ))}\r\n                        </div>\r\n                     </div>\r\n                  ) : (\r\n                     <LinearDeterminate />\r\n                  )}\r\n               </Route>\r\n               <Route exact path=\"/sources\">\r\n                  {navData ? (\r\n                     <div className=\"navbar-container\">\r\n                        <div className=\"left-section-news\">\r\n                           {navData\r\n                              .filter(\r\n                                 (art) =>\r\n                                    !!art.description &&\r\n                                    !!art.urlToImage &&\r\n                                    !!art.author\r\n                              )\r\n                              .slice(0, 15)\r\n                              .map((article) => (\r\n                                 <BigArticle\r\n                                    key={article.url}\r\n                                    headline={article.title}\r\n                                    author={article.author}\r\n                                    time={article.publishedAt}\r\n                                    description={article.description}\r\n                                    imgURL={article.urlToImage}\r\n                                    url={article.url}\r\n                                 />\r\n                              ))}\r\n                        </div>\r\n                     </div>\r\n                  ) : (\r\n                     <LinearDeterminate />\r\n                  )}\r\n               </Route>\r\n               <Route exact path=\"/lang\">\r\n                  {navData ? (\r\n                     <div className=\"navbar-container\">\r\n                        <div className=\"left-section-news\">\r\n                           {navData\r\n                              .filter(\r\n                                 (art) =>\r\n                                    !!art.description &&\r\n                                    !!art.urlToImage &&\r\n                                    !!art.author\r\n                              )\r\n                              .slice(0, 15)\r\n                              .map((article) => (\r\n                                 <BigArticle\r\n                                    key={article.url}\r\n                                    headline={article.title}\r\n                                    author={article.author}\r\n                                    time={article.publishedAt}\r\n                                    description={article.description}\r\n                                    imgURL={article.urlToImage}\r\n                                    url={article.url}\r\n                                 />\r\n                              ))}\r\n                        </div>\r\n                     </div>\r\n                  ) : (\r\n                     <LinearDeterminate />\r\n                  )}\r\n               </Route>\r\n               <Route exact path=\"/\">\r\n                  {/* <MainContainer />\r\n                  <SecondContainer /> */}\r\n               </Route>\r\n            </Switch>\r\n         </div>\r\n      </Router>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}