{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\User\\\\Desktop\\\\react-news-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";export default function Temp(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),location=_useState2[0],setLocation=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),icon=_useState4[0],setIcon=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),threeDays=_useState6[0],setThreeDays=_useState6[1];var roundNumbers=function roundNumbers(number){return Math.round((number-273.15)*1.8+32);};var unixConvert=function unixConvert(unix_timestamp){var date=new Date(unix_timestamp*1000);var hours=date.getHours();var minutes=\"0\"+date.getMinutes();var seconds=\"0\"+date.getSeconds();var formattedTime=hours+\":\"+minutes.substr(-2)+\":\"+seconds.substr(-2);return formattedTime;};useEffect(function(){getLocation();},[]);//ask for location\nfunction getLocation(){if(navigator.geolocation){navigator.geolocation.getCurrentPosition(showPosition);}else{console.log(\"couldnt set the position\");}}//POST lat and long\n//set geolocation\nfunction showPosition(position){var lat=position.coords.latitude;var lon=position.coords.longitude;var locationData={lat:lat,lon:lon};var options={method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(locationData)};fetch(\"/weather\",options).then(function(response){return response.json();}).then(function(data){var weatherTemp=((data.current.temp-273.15)*1.8+32).toFixed(0);var iconURL=data.current.weather[0].icon;var daysMap=data.daily;setLocation(weatherTemp);setIcon(iconURL);setThreeDays(data.daily);console.log(data);});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"temperature\"},/*#__PURE__*/React.createElement(\"img\",{src:\"https://openweathermap.org/img/wn/\".concat(icon,\".png\"),alt:\"\",srcSet:\"\"}),location,\" \\xB0F\",\" \"));}","map":{"version":3,"sources":["C:/Users/User/Desktop/react-news-app/src/components/Temp.js"],"names":["React","useEffect","useState","Temp","location","setLocation","icon","setIcon","threeDays","setThreeDays","roundNumbers","number","Math","round","unixConvert","unix_timestamp","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedTime","substr","getLocation","navigator","geolocation","getCurrentPosition","showPosition","console","log","position","lat","coords","latitude","lon","longitude","locationData","options","method","headers","body","JSON","stringify","fetch","then","response","json","data","weatherTemp","current","temp","toFixed","iconURL","weather","daysMap","daily"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function Temp() {\r\n   const [location, setLocation] = useState([]);\r\n   const [icon, setIcon] = useState([]);\r\n   const [threeDays, setThreeDays] = useState([]);\r\n\r\n   const roundNumbers = (number) => Math.round((number - 273.15) * 1.8 + 32);\r\n\r\n   let unixConvert = (unix_timestamp) => {\r\n      var date = new Date(unix_timestamp * 1000);\r\n      var hours = date.getHours();\r\n      var minutes = \"0\" + date.getMinutes();\r\n      var seconds = \"0\" + date.getSeconds();\r\n      var formattedTime =\r\n         hours + \":\" + minutes.substr(-2) + \":\" + seconds.substr(-2);\r\n      return formattedTime;\r\n   };\r\n\r\n   useEffect(() => {\r\n      getLocation();\r\n   }, []);\r\n   //ask for location\r\n   function getLocation() {\r\n      if (navigator.geolocation) {\r\n         navigator.geolocation.getCurrentPosition(showPosition);\r\n      } else {\r\n         console.log(\"couldnt set the position\");\r\n      }\r\n   }\r\n   //POST lat and long\r\n   //set geolocation\r\n   function showPosition(position) {\r\n      let lat = position.coords.latitude;\r\n      let lon = position.coords.longitude;\r\n      const locationData = { lat, lon };\r\n      const options = {\r\n         method: \"POST\",\r\n         headers: {\r\n            \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify(locationData),\r\n      };\r\n      fetch(\"/weather\", options)\r\n         .then((response) => response.json())\r\n         .then((data) => {\r\n            let weatherTemp = ((data.current.temp - 273.15) * 1.8 + 32).toFixed(\r\n               0\r\n            );\r\n            let iconURL = data.current.weather[0].icon;\r\n            let daysMap = data.daily;\r\n            setLocation(weatherTemp);\r\n            setIcon(iconURL);\r\n            setThreeDays(data.daily);\r\n            console.log(data);\r\n         });\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <div className=\"temperature\">\r\n            <img\r\n               src={`https://openweathermap.org/img/wn/${icon}.png`}\r\n               alt=\"\"\r\n               srcSet=\"\"\r\n            />\r\n            {location} Â°F{\" \"}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}