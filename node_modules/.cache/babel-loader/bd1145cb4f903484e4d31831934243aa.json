{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  const [data, setData] = useState();\n  useEffect(() => {\n    const fetchData = () => {\n      var urlencoded = new URLSearchParams();\n      var requestOptions = {\n        method: \"GET\",\n        body: urlencoded,\n        redirect: \"follow\"\n      };\n      fetch(url, requestOptions).then(response => response.text()).then(result => setData(result.articles)).catch(error => console.log(\"error\", error));\n    };\n\n    fetchData();\n  }, []);\n  return {\n    data\n  };\n};\n\nexport default useFetch;","map":{"version":3,"sources":["D:/react-news-app/news-api-react/src/subComponents/myFetchHook.js"],"names":["useState","useEffect","useFetch","url","data","setData","fetchData","urlencoded","URLSearchParams","requestOptions","method","body","redirect","fetch","then","response","text","result","articles","catch","error","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMK,SAAS,GAAG,MAAM;AACrB,UAAIC,UAAU,GAAG,IAAIC,eAAJ,EAAjB;AAEA,UAAIC,cAAc,GAAG;AAClBC,QAAAA,MAAM,EAAE,KADU;AAElBC,QAAAA,IAAI,EAAEJ,UAFY;AAGlBK,QAAAA,QAAQ,EAAE;AAHQ,OAArB;AAMAC,MAAAA,KAAK,CAACV,GAAD,EAAMM,cAAN,CAAL,CACIK,IADJ,CACUC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADvB,EAEIF,IAFJ,CAEUG,MAAD,IAAYZ,OAAO,CAACY,MAAM,CAACC,QAAR,CAF5B,EAGIC,KAHJ,CAGWC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAHrB;AAIF,KAbD;;AAcAd,IAAAA,SAAS;AACX,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,SAAO;AAAEF,IAAAA;AAAF,GAAP;AACF,CAtBD;;AAuBA,eAAeF,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n   const [data, setData] = useState();\r\n\r\n   useEffect(() => {\r\n      const fetchData = () => {\r\n         var urlencoded = new URLSearchParams();\r\n\r\n         var requestOptions = {\r\n            method: \"GET\",\r\n            body: urlencoded,\r\n            redirect: \"follow\",\r\n         };\r\n\r\n         fetch(url, requestOptions)\r\n            .then((response) => response.text())\r\n            .then((result) => setData(result.articles))\r\n            .catch((error) => console.log(\"error\", error));\r\n      };\r\n      fetchData();\r\n   }, []);\r\n\r\n   return { data };\r\n};\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}