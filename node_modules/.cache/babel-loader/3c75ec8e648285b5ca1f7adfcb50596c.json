{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-news-app\\\\news-api-react\\\\src\\\\components\\\\SecondGridFirstArea.js\";\nimport React, { useEffect, useState } from 'react';\nimport BigArticle from './BigArticle';\nimport XlArticle from './XlArticle';\nexport default function SecondGridFirstArea() {\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    await fetch('/top').then(res => res.json()).then(data => setItems(data.data.articles));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, items.filter(art => !!art.urlToImage && !!art.url).slice(0, 1).map(article => /*#__PURE__*/React.createElement(XlArticle, {\n    imgURL: article.urlToImage,\n    headline: article.title,\n    url: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 86\n    }\n  })), items.filter(art => !!art.description && !!art.urlToImage && !!art.author).slice(1, 3).map(article => /*#__PURE__*/React.createElement(BigArticle, {\n    key: article.url,\n    headline: article.title,\n    author: article.author,\n    time: article.publishedAt,\n    description: article.description,\n    imgURL: article.urlToImage,\n    url: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 110\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/react-news-app/news-api-react/src/components/SecondGridFirstArea.js"],"names":["React","useEffect","useState","BigArticle","XlArticle","SecondGridFirstArea","items","setItems","loadData","fetch","then","res","json","data","articles","filter","art","urlToImage","url","slice","map","article","title","description","author","publishedAt"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAGA,eAAe,SAASC,mBAAT,GAA+B;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACXO,IAAAA,QAAQ;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,QAAQ,GAAG,YAAY;AACxB,UAAMC,KAAK,CAAC,MAAD,CAAL,CACNC,IADM,CACDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADN,EAENF,IAFM,CAEDG,IAAI,IAAIN,QAAQ,CAACM,IAAI,CAACA,IAAL,CAAUC,QAAX,CAFf,CAAN;AAGF,GAJH;;AAQJ,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,KAAK,CAACS,MAAN,CAAaC,GAAG,IAAI,CAAC,CAACA,GAAG,CAACC,UAAN,IAAkB,CAAC,CAACD,GAAG,CAACE,GAA5C,EAAiDC,KAAjD,CAAuD,CAAvD,EAAyD,CAAzD,EAA4DC,GAA5D,CAAgEC,OAAO,iBAAK,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEA,OAAO,CAACJ,UAA3B;AAAuC,IAAA,QAAQ,EAAEI,OAAO,CAACC,KAAzD;AAAgE,IAAA,GAAG,EAAED,OAAO,CAACH,GAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5E,CADL,EAEMZ,KAAK,CAACS,MAAN,CAAaC,GAAG,IAAI,CAAC,CAACA,GAAG,CAACO,WAAN,IAAmB,CAAC,CAACP,GAAG,CAACC,UAAzB,IAAqC,CAAC,CAACD,GAAG,CAACQ,MAA/D,EAAuEL,KAAvE,CAA6E,CAA7E,EAA+E,CAA/E,EAAkFC,GAAlF,CAAsFC,OAAO,iBAAM,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,OAAO,CAACH,GAAzB;AACzD,IAAA,QAAQ,EAAGG,OAAO,CAACC,KADsC;AAEzD,IAAA,MAAM,EAAED,OAAO,CAACG,MAFyC;AAGzD,IAAA,IAAI,EAAEH,OAAO,CAACI,WAH2C;AAIzD,IAAA,WAAW,EAAEJ,OAAO,CAACE,WAJoC;AAKzD,IAAA,MAAM,EAAEF,OAAO,CAACJ,UALyC;AAMzD,IAAA,GAAG,EAAEI,OAAO,CAACH,GAN4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnG,CAFN,CADJ;AAYC","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport BigArticle from './BigArticle';\r\nimport XlArticle from './XlArticle'\r\n\r\n\r\nexport default function SecondGridFirstArea() {\r\n    const [items, setItems] = useState([]);\r\n  \r\n    useEffect( () => {\r\n          loadData();\r\n    }, []);\r\n  \r\n    const loadData = async () => {\r\n         await fetch('/top')\r\n        .then(res => res.json())\r\n        .then(data => setItems(data.data.articles));\r\n      }\r\n      \r\n    \r\n\r\nreturn( \r\n    <div>\r\n        {items.filter(art => !!art.urlToImage&&!!art.url).slice(0,1).map(article => (<XlArticle imgURL={article.urlToImage} headline={article.title} url={article.url} />))}\r\n         {items.filter(art => !!art.description&&!!art.urlToImage&&!!art.author).slice(1,3).map(article => ( <BigArticle key={article.url} \r\n                                                    headline ={article.title} \r\n                                                    author={article.author}\r\n                                                    time={article.publishedAt}\r\n                                                    description={article.description} \r\n                                                    imgURL={article.urlToImage} \r\n                                                    url={article.url}/>))}\r\n    </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}