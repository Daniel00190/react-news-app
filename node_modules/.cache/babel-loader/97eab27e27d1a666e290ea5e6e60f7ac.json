{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  const [data, setData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = () => {\n      fetch(url).then(response => response.json()).then(result => {\n        setData(result.articles);\n        console.log(result);\n        setIsLoading(false);\n      });\n    };\n  }, []);\n  fetchData();\n  return {\n    data,\n    isLoading\n  };\n};\n\nexport default useFetch;","map":{"version":3,"sources":["D:/react-news-app/news-api-react/src/subComponents/myFetchHook.js"],"names":["useState","useEffect","useFetch","url","data","setData","isLoading","setIsLoading","fetchData","fetch","then","response","json","result","articles","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACbM,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAMC,SAAS,GAAG,MAAM;AACrBC,MAAAA,KAAK,CAACN,GAAD,CAAL,CACIO,IADJ,CACUC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADvB,EAEIF,IAFJ,CAEUG,MAAD,IAAY;AACfR,QAAAA,OAAO,CAACQ,MAAM,CAACC,QAAR,CAAP;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACF,OANJ;AAOF,KARD;AASF,GAXQ,EAWN,EAXM,CAAT;AAYAC,EAAAA,SAAS;AACT,SAAO;AAAEJ,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAP;AACF,CAlBD;;AAmBA,eAAeJ,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n   const [data, setData] = useState();\r\n   const [isLoading, setIsLoading] = useState(false);\r\n\r\n   useEffect(() => {\r\n      setIsLoading(true);\r\n      const fetchData = () => {\r\n         fetch(url)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n               setData(result.articles);\r\n               console.log(result);\r\n               setIsLoading(false);\r\n            });\r\n      };\r\n   }, []);\r\n   fetchData();\r\n   return { data, isLoading };\r\n};\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}