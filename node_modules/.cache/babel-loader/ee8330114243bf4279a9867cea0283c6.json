{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-news-app\\\\news-api-react\\\\src\\\\components\\\\LeftSideNews.js\";\nimport React, { useState, useEffect } from \"react\";\nimport BigArticle from \"./BigArticle\";\nimport XlArticle from \"./XlArticle\";\n\nfunction LeftSideNews() {\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    let valueToSend = {\n      word: \"trump\"\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(valueToSend)\n    };\n    await fetch(\"/trump\").then(res => res.json()).then(data => setItems(data.articles));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-section-news\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, items.filter(art => !!art.urlToImage && !!art.url).slice(0, 1).map(article => /*#__PURE__*/React.createElement(XlArticle, {\n    imgURL: article.urlToImage,\n    headline: article.title,\n    link: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }\n  })), items.filter(art => !!art.description && !!art.urlToImage && !!art.author).slice(1, 3).map(article => /*#__PURE__*/React.createElement(BigArticle, {\n    key: article.url,\n    headline: article.title,\n    author: article.author,\n    time: article.publishedAt,\n    description: article.description,\n    imgURL: article.urlToImage,\n    url: article.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }\n  })));\n}\n\nexport default LeftSideNews;","map":{"version":3,"sources":["C:/Users/User/Desktop/react-news-app/news-api-react/src/components/LeftSideNews.js"],"names":["React","useState","useEffect","BigArticle","XlArticle","LeftSideNews","items","setItems","loadData","valueToSend","word","options","method","headers","body","JSON","stringify","fetch","then","res","json","data","articles","filter","art","urlToImage","url","slice","map","article","title","description","author","publishedAt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,YAAT,GAAwB;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACbM,IAAAA,QAAQ;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,QAAQ,GAAG,YAAY;AAC1B,QAAIC,WAAW,GAAG;AACfC,MAAAA,IAAI,EAAE;AADS,KAAlB;AAGA,UAAMC,OAAO,GAAG;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACN,wBAAgB;AADV,OAFI;AAKbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,WAAf;AALO,KAAhB;AAOA,UAAMQ,KAAK,CAAC,QAAD,CAAL,CACFC,IADE,CACIC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADZ,EAEFF,IAFE,CAEIG,IAAD,IAAUd,QAAQ,CAACc,IAAI,CAACC,QAAN,CAFrB,CAAN;AAGF,GAdD;;AAgBA,sBACG;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIhB,KAAK,CACFiB,MADH,CACWC,GAAD,IAAS,CAAC,CAACA,GAAG,CAACC,UAAN,IAAoB,CAAC,CAACD,GAAG,CAACE,GAD7C,EAEGC,KAFH,CAES,CAFT,EAEY,CAFZ,EAGGC,GAHH,CAGQC,OAAD,iBACF,oBAAC,SAAD;AACG,IAAA,MAAM,EAAEA,OAAO,CAACJ,UADnB;AAEG,IAAA,QAAQ,EAAEI,OAAO,CAACC,KAFrB;AAGG,IAAA,IAAI,EAAED,OAAO,CAACH,GAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJL,CADJ,EAWIpB,KAAK,CACFiB,MADH,CAEMC,GAAD,IAAS,CAAC,CAACA,GAAG,CAACO,WAAN,IAAqB,CAAC,CAACP,GAAG,CAACC,UAA3B,IAAyC,CAAC,CAACD,GAAG,CAACQ,MAF7D,EAIGL,KAJH,CAIS,CAJT,EAIY,CAJZ,EAKGC,GALH,CAKQC,OAAD,iBACF,oBAAC,UAAD;AACG,IAAA,GAAG,EAAEA,OAAO,CAACH,GADhB;AAEG,IAAA,QAAQ,EAAEG,OAAO,CAACC,KAFrB;AAGG,IAAA,MAAM,EAAED,OAAO,CAACG,MAHnB;AAIG,IAAA,IAAI,EAAEH,OAAO,CAACI,WAJjB;AAKG,IAAA,WAAW,EAAEJ,OAAO,CAACE,WALxB;AAMG,IAAA,MAAM,EAAEF,OAAO,CAACJ,UANnB;AAOG,IAAA,GAAG,EAAEI,OAAO,CAACH,GAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANL,CAXJ,CADH;AA8BF;;AAED,eAAerB,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport BigArticle from \"./BigArticle\";\r\nimport XlArticle from \"./XlArticle\";\r\n\r\nfunction LeftSideNews() {\r\n   const [items, setItems] = useState([]);\r\n\r\n   useEffect(() => {\r\n      loadData();\r\n   }, []);\r\n\r\n   const loadData = async () => {\r\n      let valueToSend = {\r\n         word: \"trump\"\r\n      }\r\n      const options = {\r\n         method: 'POST',\r\n         headers: {\r\n            'Content-Type': 'application/json'\r\n         },\r\n         body: JSON.stringify(valueToSend)\r\n      };\r\n      await fetch(\"/trump\")\r\n         .then((res) => res.json())\r\n         .then((data) => setItems(data.articles));\r\n   };\r\n\r\n   return (\r\n      <div className=\"left-section-news\">\r\n         {items\r\n            .filter((art) => !!art.urlToImage && !!art.url)\r\n            .slice(0, 1)\r\n            .map((article) => (\r\n               <XlArticle\r\n                  imgURL={article.urlToImage}\r\n                  headline={article.title}\r\n                  link={article.url}\r\n               />\r\n            ))}\r\n         {items\r\n            .filter(\r\n               (art) => !!art.description && !!art.urlToImage && !!art.author\r\n            )\r\n            .slice(1, 3)\r\n            .map((article) => (\r\n               <BigArticle\r\n                  key={article.url}\r\n                  headline={article.title}\r\n                  author={article.author}\r\n                  time={article.publishedAt}\r\n                  description={article.description}\r\n                  imgURL={article.urlToImage}\r\n                  url={article.url}\r\n               />\r\n            ))}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default LeftSideNews;\r\n"]},"metadata":{},"sourceType":"module"}