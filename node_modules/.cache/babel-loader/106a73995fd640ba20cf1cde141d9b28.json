{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-news-app\\\\news-api-react\\\\src\\\\components\\\\LeftSideNews.js\";\nimport React from \"react\";\nimport BigArticle from \"./BigArticle\";\nimport XlArticle from \"./XlArticle\";\nimport LinearDeterminate from \"./LinearDeterminate\";\nimport useFetch from \"./myFetchHook\";\n\nfunction LeftSideNews() {\n  const {\n    data,\n    isLoading\n  } = useFetch(\"/trump\");\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(LinearDeterminate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 14\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-section-news\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 10\n      }\n    }, data.filter(art => !!art.urlToImage && !!art.url).slice(0, 1).map(article => /*#__PURE__*/React.createElement(XlArticle, {\n      imgURL: article.urlToImage,\n      headline: article.title,\n      link: article.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 19\n      }\n    })), data.filter(art => !!art.description && !!art.urlToImage && !!art.author).slice(2, 5).map(article => /*#__PURE__*/React.createElement(BigArticle, {\n      key: article.url,\n      headline: article.title,\n      author: article.author,\n      time: article.publishedAt,\n      description: article.description,\n      imgURL: article.urlToImage,\n      url: article.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }\n    })));\n  }\n}\n\nexport default LeftSideNews;","map":{"version":3,"sources":["C:/Users/User/Desktop/react-news-app/news-api-react/src/components/LeftSideNews.js"],"names":["React","BigArticle","XlArticle","LinearDeterminate","useFetch","LeftSideNews","data","isLoading","filter","art","urlToImage","url","slice","map","article","title","description","author","publishedAt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,SAASC,YAAT,GAAwB;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBH,QAAQ,CAAC,QAAD,CAApC;;AAEA,MAAIG,SAAJ,EAAe;AACZ,wBAAO,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACF,GAFD,MAEO;AACJ,wBACG;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,IAAI,CACDE,MADH,CACWC,GAAD,IAAS,CAAC,CAACA,GAAG,CAACC,UAAN,IAAoB,CAAC,CAACD,GAAG,CAACE,GAD7C,EAEGC,KAFH,CAES,CAFT,EAEY,CAFZ,EAGGC,GAHH,CAGQC,OAAD,iBACF,oBAAC,SAAD;AACG,MAAA,MAAM,EAAEA,OAAO,CAACJ,UADnB;AAEG,MAAA,QAAQ,EAAEI,OAAO,CAACC,KAFrB;AAGG,MAAA,IAAI,EAAED,OAAO,CAACH,GAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJL,CADJ,EAWIL,IAAI,CACDE,MADH,CAEMC,GAAD,IAAS,CAAC,CAACA,GAAG,CAACO,WAAN,IAAqB,CAAC,CAACP,GAAG,CAACC,UAA3B,IAAyC,CAAC,CAACD,GAAG,CAACQ,MAF7D,EAIGL,KAJH,CAIS,CAJT,EAIY,CAJZ,EAKGC,GALH,CAKQC,OAAD,iBACF,oBAAC,UAAD;AACG,MAAA,GAAG,EAAEA,OAAO,CAACH,GADhB;AAEG,MAAA,QAAQ,EAAEG,OAAO,CAACC,KAFrB;AAGG,MAAA,MAAM,EAAED,OAAO,CAACG,MAHnB;AAIG,MAAA,IAAI,EAAEH,OAAO,CAACI,WAJjB;AAKG,MAAA,WAAW,EAAEJ,OAAO,CAACE,WALxB;AAMG,MAAA,MAAM,EAAEF,OAAO,CAACJ,UANnB;AAOG,MAAA,GAAG,EAAEI,OAAO,CAACH,GAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANL,CAXJ,CADH;AA8BF;AACH;;AAED,eAAeN,YAAf","sourcesContent":["import React from \"react\";\r\nimport BigArticle from \"./BigArticle\";\r\nimport XlArticle from \"./XlArticle\";\r\nimport LinearDeterminate from \"./LinearDeterminate\";\r\nimport useFetch from \"./myFetchHook\";\r\n\r\nfunction LeftSideNews() {\r\n   const { data, isLoading } = useFetch(\"/trump\");\r\n\r\n   if (isLoading) {\r\n      return <LinearDeterminate />;\r\n   } else {\r\n      return (\r\n         <div className=\"left-section-news\">\r\n            {data\r\n               .filter((art) => !!art.urlToImage && !!art.url)\r\n               .slice(0, 1)\r\n               .map((article) => (\r\n                  <XlArticle\r\n                     imgURL={article.urlToImage}\r\n                     headline={article.title}\r\n                     link={article.url}\r\n                  />\r\n               ))}\r\n            {data\r\n               .filter(\r\n                  (art) => !!art.description && !!art.urlToImage && !!art.author\r\n               )\r\n               .slice(2, 5)\r\n               .map((article) => (\r\n                  <BigArticle\r\n                     key={article.url}\r\n                     headline={article.title}\r\n                     author={article.author}\r\n                     time={article.publishedAt}\r\n                     description={article.description}\r\n                     imgURL={article.urlToImage}\r\n                     url={article.url}\r\n                  />\r\n               ))}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default LeftSideNews;\r\n"]},"metadata":{},"sourceType":"module"}